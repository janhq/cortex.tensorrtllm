name: CI Quality Gate

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 1440
    strategy:
      fail-fast: false
      matrix:
        include:
          # - os: "windows"
          #   name: "cuda-12-4"
          #   runs-on: "windows-tensorrt-llm-0-11-0-cuda-12-4"
          #   run-e2e: false
          #   s3-key-prefix: "windows-tensorrt-llm-tensorrt-llm-0-11-0-ccache"
          #   ccache-dir: 'C:\Users\ContainerAdministrator\AppData\Local\ccache'
          - os: "linux"
            name: "cuda-12-4"
            runs-on: "linux-tensorrt-llm-0-11-0-cuda-12-4"
            run-e2e: false
            s3-key-prefix: "linux-tensorrt-llm-tensorrt-llm-0-11-0-ccache"
            ccache-dir: '/home/runner/.cache/ccache'
    permissions:
      contents: write
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          lfs: true

      - name: Install tools on Windows
        if: runner.os == 'Windows'
        run: |
          choco install make pkgconfiglite ccache awscli 7zip -y
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

      - name: Download ccache from s3
        if: runner.os == 'Windows'
        continue-on-error: true
        run: |
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv
          aws s3 cp s3://${{ secrets.MINIO_BUCKET_NAME }}/${{ matrix.s3-key-prefix }} ${{ matrix.ccache-dir }} --recursive --endpoint ${{ secrets.MINIO_ENDPOINT }}  --cli-read-timeout 0
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MINIO_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MINIO_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: "${{ secrets.MINIO_REGION }}"

      - name: Download ccache from s3
        if: runner.os == 'Linux'
        continue-on-error: true
        run: |
          aws s3 cp s3://${{ secrets.MINIO_BUCKET_NAME }}/${{ matrix.s3-key-prefix }} ${{ matrix.ccache-dir }} --recursive --endpoint ${{ secrets.MINIO_ENDPOINT }}  --cli-read-timeout 0
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MINIO_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MINIO_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: "${{ secrets.MINIO_REGION }}"

      - name: Build Dependencies
        working-directory: cpp
        run: |
          make build-deps

      - name: Build
        working-directory: cpp
        run: |
          make build

      - name: Pre-package
        working-directory: cpp
        run: |
          make pre-package

      - name: Package
        working-directory: cpp
        run: |
          make package

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: cortex.tensorrt-llm-${{ matrix.os }}-${{ matrix.name }}
          path: cpp/tensorrt_llm/cortex.tensorrt-llm/cortex.tensorrt-llm.tar.gz

      - name: Upload ccache to s3
        continue-on-error: true
        if: always() && runner.os == 'Windows'
        run: |
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv
          aws s3 cp ${{ matrix.ccache-dir }} s3://${{ secrets.MINIO_BUCKET_NAME }}/${{ matrix.s3-key-prefix }} --recursive --endpoint ${{ secrets.MINIO_ENDPOINT }}
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MINIO_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MINIO_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: "${{ secrets.MINIO_REGION }}"

      - name: Upload ccache to s3
        continue-on-error: true
        if: always() && runner.os == 'Linux'
        run: |
          aws s3 cp ${{ matrix.ccache-dir }} s3://${{ secrets.MINIO_BUCKET_NAME }}/${{ matrix.s3-key-prefix }} --recursive --endpoint ${{ secrets.MINIO_ENDPOINT }}
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.MINIO_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MINIO_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: "${{ secrets.MINIO_REGION }}"
